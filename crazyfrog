jmp RESET
jmp INT0_MUX

.org $2A ;nice
call ADR_INIT
RESET:

clr r23
clr r20
   ldi r23,$10

	clr r18
	ldi r16,$0F
	out MCUCR,r16 ; set int0 och int1 att interrupta stigande
	ldi r16,(1<<INT0)
	out GICR,r16
	

;chill y-pekare
	clr YL
	ldi YH,$01
;portar
 clr r19
 ser r16
 out DDRB, r16
 ;stack


	
 ;z
 	ldi ZH,HIGH(MUXTABELL*2)
	ldi ZL,LOW(MUXTABELL*2)

 ;a/d
	ldi r16, (1<<ADLAR)
	out ADMUX, r16

	ldi r16, (1<<ADEN)
	out ADCSRA, r16
  sei
LOOP:
	sbi ADCSRA, ADSC
WAIT:
	sbic ADCSRA, ADSC
	jmp WAIT

	
	in r16, ADCH

	cpi r16, $E
	brlo PLUS

	cpi r16,$F0
	brsh MINUS
UT:
	out PORTB,r17
	call DELAY
	jmp LOOP

PLUS:
	
	sbrs r17,0
	lsr r17
	st Y,r17
	jmp UT





MINUS:
	sbrs r17,6
	lsl r17	
	st Y,r17
	jmp UT
	
INT0_MUX:;
	
    
    ;Z
	ldi ZH,HIGH(MUXTABELL*2)
	ldi ZL,LOW(MUXTABELL*2)
	
	;cp med muxmax
	cpi r19, $05
	brlo NOTMAX
	clr r19
	out PORTB,r19
	NOTMAX:
	;mux mode on
	add ZL,r19
	clr r18
	lpm r18,Z
	ld r17,Y+
	out PORTA,r18
	call MUXVALUE
	out PORTB,r17
	inc r19

	reti 

MUXVALUE:

cpi YL,$05
brne GO
clr YL
GO:

ret

DELAY:
push r20
push r21
push r22
	ldi r20,3
D_3:
	ldi r21,0
D_2:
	ldi r22,0
D_1:
	dec r22
	brne D_1
	dec r21
	brne D_2
	dec r20
	brne D_3
	ret	
pop r22
pop r21
pop r20



ADR_INIT:

 ldi r16, HIGH(RAMEND)
 out SPH, r16
 ldi r16, LOW(RAMEND)
 out SPL, r16

	sts $100,r23
	sts $101,r20
	sts $102,r20
	sts $103,r20
	sts $104,r20
	sts $105,r20

	MUXTABELL:

	.db	$00,$10,$20,$30,$40,$40

	;NICETABELL:

	;.db $01,$02,$04,$08,$10,$20,$40


	
	
