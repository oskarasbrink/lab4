jmp RESET
jmp INT0_MUX

.org $2A ;nice
  clr r17
  ldi r17, $08
 RESET:;avbrott
 
 clr r17
  ldi r17, $08
	clr r18

	ldi r16,$0F
	out MCUCR,r16 ; set int0 och int1 att interrupta stigande
	ldi r16,(1<<INT0)
	out GICR,r16
	
;chill y-pekare
clr YL
ldi YH,$01


;portar
 clr r19
 ser r16
 out DDRB, r16
 ;stack
 ldi r16, HIGH(RAMEND)
 out SPH, r16
 ldi r16, LOW(RAMEND)
 out SPL, r16

 ;z
 	ldi ZH,HIGH(MUXTABELL*2)
	ldi ZL,LOW(MUXTABELL*2)

 ;a/d
	ldi r16, (1<<ADLAR)
	out ADMUX, r16

	ldi r16, (1<<ADEN)
	out ADCSRA, r16
  sei
LOOP:
	 sbi ADCSRA, ADSC
WAIT:
	 sbic ADCSRA, ADSC
	 jmp WAIT
NOTWAIT:	 	
	ldi r20,$08
	sts $101,r20
	clr r20
	sts $102,r20
	sts $103,r20
	sts $104,r20
	sts $105,r20
	 in r16, ADCH

jmp NOTWAIT
INT0_MUX:;
 		 cpi r16, $E
	 brlo PLUS

	 cpi r16,$F0
	brsh MINUS
UT:
	out PORTB, r17 
	call DELAY
	jmp MUX

PLUS:
	sbrs r17,0
	lsr r17
	


	jmp UT

MINUS:
	sbrs r17,6
	lsl r17

	jmp UT
	MUX:
	ldi ZH,HIGH(MUXTABELL*2)
	ldi ZL,LOW(MUXTABELL*2)
	cpi r19, $05
	brlo NOTMAX
	clr r19
	NOTMAX:

	add ZL,r19
	clr r18
	lpm r18,Z
	out PORTB,r17
	out PORTA,r18
	inc r19
	reti 

MUXADRESSER:



reti


DELAY:

	ldi r20,3
D_3:
	ldi r21,0
D_2:
	ldi r22,0
D_1:
	dec r22
	brne D_1
	dec r21
	brne D_2
	dec r20
	brne D_3
	ret	


	MUXTABELL:

	.db	$00,$10,$20,$30,$40,$40


	MUXVALUES:
	.org $100
	

	
